<?xml version="1.0" encoding="UTF-8"?>

<!--
  ~ =============================================================================
  ~
  ~   Copyright (c) 2011-2018, The THYMELEAF team (http://www.thymeleaf.org)
  ~
  ~   Licensed under the Apache License, Version 2.0 (the "License");
  ~   you may not use this file except in compliance with the License.
  ~   You may obtain a copy of the License at
  ~
  ~       http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~   Unless required by applicable law or agreed to in writing, software
  ~   distributed under the License is distributed on an "AS IS" BASIS,
  ~   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~   See the License for the specific language governing permissions and
  ~   limitations under the License.
  ~
  ~ =============================================================================
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <groupId>org.thymeleaf.extras</groupId>
  <artifactId>thymeleaf-extras-springsecurity3</artifactId>
  <packaging>jar</packaging>
  <version>3.0.6-SNAPSHOT</version>
  <name>thymeleaf-extras-springsecurity3</name>
  <url>http://www.thymeleaf.org</url>

  <description>Modern server-side Java template engine for both web and standalone environments</description>

  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <organization>
    <name>The THYMELEAF team</name>
    <url>http://www.thymeleaf.org</url>
  </organization>

  <scm>
    <url>scm:git:git@github.com:thymeleaf/thymeleaf-extras-springsecurity.git</url>
    <connection>scm:git:git@github.com:thymeleaf/thymeleaf-extras-springsecurity.git</connection>
    <developerConnection>scm:git:git@github.com:thymeleaf/thymeleaf-extras-springsecurity.git</developerConnection>
    <tag>HEAD</tag>
  </scm>

  <developers>
    <developer>
      <id>danielfernandez</id>
      <name>Daniel Fernandez</name>
      <email>daniel.fernandez AT 11thlabs DOT org</email>
      <roles>
        <role>Project Admin</role>
        <role>Lead Developer</role>
      </roles>
    </developer>
    <developer>
      <id>jmiguelsamper</id>
      <name>Jose Miguel Samper</name>
      <email>jmiguelsamper AT users DOT sourceforge DOT net</email>
      <roles>
        <role>Developer</role>
      </roles>
    </developer>
    <developer>
      <id>ultraq</id>
      <name>Emanuel Rabina</name>
      <email>emanuelrabina AT gmail DOT com</email>
      <roles>
        <role>Developer</role>
      </roles>
    </developer>
  </developers>

  <distributionManagement>
    <snapshotRepository>
      <id>sonatype-nexus-snapshots</id>
      <name>Sonatype Nexus Snapshots</name>
      <url>https://oss.sonatype.org/content/repositories/snapshots</url>
    </snapshotRepository>
    <repository>
      <id>sonatype-nexus-snapshots</id>
      <name>Sonatype Nexus Snapshots</name>
      <url>https://oss.sonatype.org/service/local/staging/deploy/maven2</url>
    </repository>
  </distributionManagement>

  <repositories>
    <repository>
      <id>sonatype-nexus-snapshots</id>
      <name>Sonatype Nexus Snapshots</name>
      <url>https://oss.sonatype.org/content/repositories/snapshots</url>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </repository>
    <repository>
      <id>spring-milestones</id>
      <name>Spring Milestones</name>
      <url>http://repo.spring.io/milestone</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
  </repositories>


  <properties>
    <java.version>6</java.version>
    <maven.compiler.source>${java.version}</maven.compiler.source>
    <maven.compiler.target>${java.version}</maven.compiler.target>
    <maven.compiler.release>${java.version}</maven.compiler.release>
    <project.build.sourceEncoding>US-ASCII</project.build.sourceEncoding>
    <project.build.propertiesEncoding>ISO-8859-1</project.build.propertiesEncoding>
    <!-- A project-name-based approach is adopted for the module name (instead of a reverse-DNS one) -->
    <!-- NOTE module name is fixed and not set to project.artifactId because this would not be a     -->
    <!-- valid approach for project names containing hyphens, which are not allowed in module names. -->
    <module.name>thymeleaf.extras.springsecurity3</module.name>
    <servlet-api.version>2.5</servlet-api.version>
    <thymeleaf.version>3.0.10.RELEASE</thymeleaf.version>
    <springsecurity.version>3.1.3.RELEASE</springsecurity.version>
    <slf4j.version>1.7.25</slf4j.version>
  </properties>


  <build>

    <resources>

      <resource>
        <directory>src/main/resources</directory>
      </resource>

      <resource>
        <directory>.</directory>
        <targetPath>META-INF</targetPath>
        <includes>
          <include>LICENSE.txt</include>
          <include>NOTICE.txt</include>
        </includes>
      </resource>

    </resources>

    <testResources>
      <testResource>
        <directory>src/test/resources</directory>
      </testResource>
    </testResources>

    <plugins>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.8.1</version>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>3.2.0</version>
        <configuration>
          <encoding>${project.build.sourceEncoding}</encoding>
          <propertiesEncoding>${project.build.propertiesEncoding}</propertiesEncoding>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>3.2.0</version>
        <configuration>
          <archive>
            <addMavenDescriptor>false</addMavenDescriptor>
            <manifest>
              <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
              <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
            </manifest>
            <manifestEntries>
              <!-- These two entries are non-standard, specified by the Apache Software Foundation in -->
              <!-- their release preparation procedures as a way to pass this information on to the   -->
              <!-- library users. See: http://commons.apache.org/releases/prepare.html                -->
              <X-Compile-Source-JDK>${maven.compiler.source}</X-Compile-Source-JDK>
              <X-Compile-Target-JDK>${maven.compiler.target}</X-Compile-Target-JDK>
              <!-- Set the Built-By attribute in MANIFEST.MF to avoid displaying specific user names. -->
              <Built-By>thymeleaf</Built-By>
              <!-- Setting this automatic module name will fix the module name used by unbescape even -->
              <!-- if the library is not yet fully modularised.                                       -->
              <Automatic-Module-Name>${module.name}</Automatic-Module-Name>
            </manifestEntries>
          </archive>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>3.3.1</version>
        <configuration>
          <show>protected</show>
          <noqualifier>java.lang</noqualifier>
          <source>${maven.compiler.source}</source>
          <release>${maven.compiler.release}</release>
          <overview>${basedir}/src/main/javadoc/overview.html</overview>
          <javadocDirectory>${basedir}/src/main/javadoc</javadocDirectory>
          <reportOutputDirectory>${project.build.directory}/apidocs</reportOutputDirectory>
          <excludePackageNames>org.springframework</excludePackageNames>
          <!-- This will avoid adding a folder level for the base module name. Note: Support removed in JDK 13 -->
          <additionalJOption>--no-module-directories</additionalJOption>
        </configuration>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>3.2.1</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>3.3.0</version>
        <executions>
          <execution>
            <id>make-assembly-dist</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <descriptors>
                <descriptor>${basedir}/src/assembly/dist.xml</descriptor>
              </descriptors>
              <appendAssemblyId>true</appendAssemblyId>
              <finalName>thymeleaf-extras-springsecurity3-${project.version}</finalName>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-gpg-plugin</artifactId>
        <version>1.6</version>
        <executions>
          <execution>
            <id>sign-artifacts</id>
            <phase>verify</phase>
            <goals>
              <goal>sign</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-deploy-plugin</artifactId>
        <version>2.8.2</version>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-release-plugin</artifactId>
        <version>2.5.3</version>
        <configuration>
          <mavenExecutorId>forked-path</mavenExecutorId>
        </configuration>
        <executions>
          <execution>
            <!-- This is needed in order to allow Maven to release a project that is not in the root -->
            <!-- of a GitHub repository, but in a subfolder.                                         -->
            <id>default</id>
            <goals>
              <goal>perform</goal>
            </goals>
            <configuration>
              <pomFileName>${project.artifactId}/pom.xml</pomFileName>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- IMPORTANT: This plugin should always appear AFTER maven-release-plugin in this pom.xml -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>3.0.0</version>
        <executions>
          <!-- Copy javadoc's "element-list" file to "package-list" in order to allow projects    -->
          <!-- using versions of the javadoc tool < JDK9 to properly link to Thymeleaf's javadoc -->
          <!-- as an external link.                                                               -->
          <!-- NOTE this modifies the javadoc AFTER the creation of the jar as it is not possible -->
          <!-- to do so by previously configuring javadoc:javadoc in the prepare-package phase    -->
          <!-- because this "package-list" modification would trigger a second execution of the   -->
          <!-- javadoc tool in the javadoc:jar goal.                                              -->
          <execution>
            <id>copy-javadoc-element-list-to-package-list</id>
            <phase>package</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target name="copy javadocs element-list to package-list">
                <copy file="${project.build.directory}/apidocs/element-list" tofile="${project.build.directory}/apidocs/package-list" failonerror="false" />
              </target>
            </configuration>
          </execution>
        </executions>
      </plugin>


    </plugins>

  </build>




  <dependencies>

    <dependency>
      <groupId>org.thymeleaf</groupId>
      <artifactId>thymeleaf-spring3</artifactId>
      <version>${thymeleaf.version}</version>
      <scope>compile</scope>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.thymeleaf</groupId>
      <artifactId>thymeleaf-spring4</artifactId>
      <version>${thymeleaf.version}</version>
      <scope>compile</scope>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.thymeleaf</groupId>
      <artifactId>thymeleaf-spring5</artifactId>
      <version>${thymeleaf.version}</version>
      <scope>compile</scope>
      <optional>true</optional>
    </dependency>

    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
      <version>${servlet-api.version}</version>
      <scope>provided</scope>
      <optional>true</optional>
    </dependency>


    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-core</artifactId>
      <version>${springsecurity.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-web</artifactId>
      <version>${springsecurity.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-config</artifactId>
      <version>${springsecurity.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-acl</artifactId>
      <version>${springsecurity.version}</version>
      <scope>provided</scope>
    </dependency>


    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${slf4j.version}</version>
      <scope>compile</scope>
    </dependency>


  </dependencies>


</project>
